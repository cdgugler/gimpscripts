(define (crayon-fx-pastel pattern brightness contrast)
  (let* ((filelist (cadr (file-glob pattern 1))))
  (define crayon1 (string-append gimp-directory "/scripts/image/crayontex01.png"))
  (define crayon2 (string-append gimp-directory "/scripts/image/crayontex02.png"))
  (define crayon3 (string-append gimp-directory "/scripts/image/crayontex03.png"))
  (define crayon4 (string-append gimp-directory "/scripts/image/crayontex04.png"))
  (define texture crayon1)
    (while (not (null? filelist))
           (let* ((filename (car filelist))
                  (image (car (gimp-file-load RUN-NONINTERACTIVE
                                              filename filename)))
                  (drawable (car (gimp-image-get-active-layer image))))
             (gimp-brightness-contrast (car (gimp-image-get-active-layer image)) brightness contrast)
             (script-fu-pastel-image image 
                                     (car (gimp-image-get-active-layer image))
                                     12 10 1 45 0)
             (gimp-image-add-layer image (car (gimp-file-load-layer RUN-NONINTERACTIVE image texture)) 10)
             (gimp-layer-set-mode (vector-ref (car (cdr (gimp-image-get-layers image))) 0) DODGE-MODE)
             (gimp-image-flatten image)
             (set! drawable (car (gimp-image-get-active-layer image)))
             (gimp-file-save RUN-NONINTERACTIVE image drawable filename filename)
             (gimp-image-delete image))
             (if (string=? texture crayon1)
                (set! texture crayon2)
                (if (string=? texture crayon2)
                 (set! texture crayon3)
                 (if (string=? texture crayon3)
                  (set! texture crayon4)
                  (set! texture crayon1))))
           (set! filelist (cdr filelist)))))
